{
  "openapi": "3.0.1",
  "info": {
    "title": "Postpress API",
    "description": "Documentation for the Postpress api",
    "version": "0.1.0"
  },
  "servers": [
    {
      "url": "http://localhost:4000/",
      "description": "Local server"
    }
  ],
  "tags": [
    {
      "name": "Authentication"
    },
    {
      "name": "User"
    },
    {
      "name": "Post"
    }
  ],
  "paths": {
    "/login": {
      "post": {
        "description": "Route for user authentication",
        "operationId": "login",
        "tags": [
          "Authentication"
        ],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/loginUserInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "User has successfully logged in",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/authTokenPayload"
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorPayload"
                }
              }
            }
          }
        }
      }
    },
    "/user": {
      "post": {
        "description": "Route for register a new user. On success the user is automatically logged in.",
        "tags": [
          "User"
        ],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/registerUserInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorPayload"
                }
              }
            }
          },
          "409": {
            "description": "Provided email is already in use",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorPayload"
                }
              }
            }
          },
          "201": {
            "description": "User created successfully and logged in with token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/authTokenPayload"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "User"
        ],
        "security": [
          {
            "authorization": []
          }
        ],
        "description": "List all users",
        "responses": {
          "200": {
            "description": "List of all users",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/presentationUser"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized or invalid token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorPayload"
                }
              }
            }
          }
        }
      }
    },
    "/user/{userId}": {
      "parameters": [
        {
          "in": "path",
          "name": "userId",
          "schema": {
            "type": "string"
          },
          "required": true,
          "description": "ID of a user"
        }
      ],
      "get": {
        "security": [
          {
            "authorization": []
          }
        ],
        "tags": [
          "User"
        ],
        "responses": {
          "200": {
            "description": "Return user from {userId} param",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/presentationUser"
                }
              }
            }
          },
          "404": {
            "description": "Return a user not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorPayload"
                }
              }
            }
          },
          "401": {
            "description": "Return a unauthorized or invalid token error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorPayload"
                }
              }
            }
          }
        }
      }
    },
    "/user/me": {
      "delete": {
        "security": [
          {
            "authorization": []
          }
        ],
        "tags": [
          "User"
        ],
        "responses": {
          "204": {
            "description": "Ok. Deleted user from authorization token"
          },
          "401": {
            "description": "Return a unauthorized or invalid token error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorPayload"
                }
              }
            }
          }
        }
      }
    },
    "/post": {
      "post": {
        "description": "Route creating a new blog post",
        "tags": [
          "Post"
        ],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/createPostInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Post created succefully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/createPostPaylod"
                }
              }
            }
          },
          "400": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorPayload"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized or Invalid token error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorPayload"
                }
              }
            }
          }
        }
      },
      "get": {
        "description": "Route listing all blog posts",
        "tags": [
          "Post"
        ],
        "responses": {
          "200": {
            "description": "List of posts",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/presentationPost"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized or Invalid token error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorPayload"
                }
              }
            }
          }
        }
      }
    },
    "/post/{postId}": {
      "parameters": [
        {
          "in": "path",
          "name": "postId",
          "schema": {
            "type": "string"
          },
          "required": true,
          "description": "ID of a blog Post"
        }
      ],
      "get": {
        "security": [
          {
            "authorization": []
          }
        ],
        "tags": [
          "Post"
        ],
        "responses": {
          "200": {
            "description": "Blog post",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/presentationPost"
                }
              }
            }
          },
          "404": {
            "description": "Blog post not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorPayload"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized or Invalid token error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorPayload"
                }
              }
            }
          }
        }
      },
      "put": {
        "description": "Allows user to update their blog posts",
        "tags": [
          "Post"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/updatePostInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Post was succefully updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/updatePostPaylod"
                }
              }
            }
          },
          "404": {
            "description": "Blog post not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorPayload"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized or Invalid token error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorPayload"
                }
              }
            }
          }
        }
      }
    },
    "/post/search": {
      "parameters": [
        {
          "in": "query",
          "name": "q",
          "schema": {
            "type": "string"
          },
          "description": "Filter posts that contains the searchTerm in title or content"
        }
      ],
      "get": {
        "description": "Search for posts, if no parameters are set it will return all posts",
        "security": [
          {
            "authorization": []
          }
        ],
        "tags": [
          "Post"
        ],
        "responses": {
          "200": {
            "description": "Blog pots",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/presentationPost"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Return a unauthorized or invalid token error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorPayload"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "authorization": {
        "type": "apiKey",
        "name": "authorization",
        "in": "header",
        "description": "Standard Authorization header using the Bearer scheme. Example: \"Bearer {token}\""
      }
    },
    "schemas": {
      "uuid": {
        "type": "string",
        "example": "ef481a53-8b31-4655-8ac6-4bf106b7b1b0"
      },
      "email": {
        "type": "string",
        "example": "john@mail.com"
      },
      "password": {
        "type": "string",
        "example": "super secret password"
      },
      "displayName": {
        "type": "string",
        "example": "John Doe"
      },
      "jwtToken": {
        "type": "string",
        "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI2ZWRmN2JkMi05MmE4LTRiZTMtODAzNy0zNWJkOGE1MzVmNzIiLCJpYXQiOjE2NDMxNDk5NTd9.-rs138keqT7i2AYemx8LjAZ1-ndzZScxtxwGrG7Iq0c"
      },
      "image": {
        "type": "string",
        "example": "https://dummyimage.com/300x300/fff/aaa"
      },
      "date": {
        "type": "string",
        "example": "2022-01-27T03:28:11.101Z"
      },
      "loginUserInput": {
        "type": "object",
        "properties": {
          "password": {
            "$ref": "#/components/schemas/password"
          },
          "email": {
            "$ref": "#/components/schemas/email"
          }
        }
      },
      "registerUserInput": {
        "type": "object",
        "properties": {
          "displayName": {
            "$ref": "#/components/schemas/displayName"
          },
          "email": {
            "$ref": "#/components/schemas/email"
          },
          "password": {
            "$ref": "#/components/schemas/password"
          },
          "image": {
            "$ref": "#/components/schemas/image"
          }
        }
      },
      "createPostInput": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string"
          },
          "content": {
            "type": "string"
          }
        },
        "required": [
          "title",
          "content"
        ]
      },
      "updatePostInput": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string"
          },
          "content": {
            "type": "string"
          }
        },
        "required": [
          "title",
          "content"
        ]
      },
      "authTokenPayload": {
        "type": "object",
        "properties": {
          "token": {
            "$ref": "#/components/schemas/jwtToken"
          }
        }
      },
      "createPostPaylod": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string"
          },
          "content": {
            "type": "string"
          },
          "userId": {
            "$ref": "#/components/schemas/uuid"
          }
        }
      },
      "updatePostPaylod": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string"
          },
          "content": {
            "type": "string"
          },
          "userId": {
            "$ref": "#/components/schemas/uuid"
          }
        }
      },
      "errorPayload": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          }
        }
      },
      "presentationUser": {
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/uuid"
          },
          "displayName": {
            "$ref": "#/components/schemas/displayName"
          },
          "email": {
            "$ref": "#/components/schemas/email"
          },
          "image": {
            "$ref": "#/components/schemas/image"
          }
        }
      },
      "presentationPost": {
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/uuid"
          },
          "published": {
            "$ref": "#/components/schemas/date"
          },
          "updated": {
            "$ref": "#/components/schemas/date"
          },
          "title": {
            "type": "string"
          },
          "content": {
            "type": "string"
          },
          "user": {
            "$ref": "#/components/schemas/presentationUser"
          }
        }
      }
    }
  }
}
